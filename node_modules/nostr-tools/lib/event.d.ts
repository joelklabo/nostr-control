export declare enum Kind {
    Metadata = 0,
    Text = 1,
    RecommendRelay = 2,
    Contacts = 3,
    EncryptedDirectMessage = 4,
    EventDeletion = 5,
    Reaction = 7,
    BadgeAward = 8,
    ChannelCreation = 40,
    ChannelMetadata = 41,
    ChannelMessage = 42,
    ChannelHideMessage = 43,
    ChannelMuteUser = 44,
    Report = 1984,
    ZapRequest = 9734,
    Zap = 9735,
    RelayList = 10002,
    ClientAuth = 22242,
    BadgeDefinition = 30008,
    ProfileBadge = 30009,
    Article = 30023
}
export type EventTemplate = {
    kind: Kind;
    tags: string[][];
    content: string;
    created_at: number;
};
export type UnsignedEvent = EventTemplate & {
    pubkey: string;
};
export type Event = UnsignedEvent & {
    id: string;
    sig: string;
};
export declare function getBlankEvent(): EventTemplate;
export declare function finishEvent(t: EventTemplate, privateKey: string): Event;
export declare function serializeEvent(evt: UnsignedEvent): string;
export declare function getEventHash(event: UnsignedEvent): string;
export declare function validateEvent<T>(event: T): event is T & UnsignedEvent;
export declare function verifySignature(event: Event): boolean;
export declare function signEvent(event: UnsignedEvent, key: string): string;
